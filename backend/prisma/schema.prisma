// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId            String     @id @default(uuid()) @db.VarChar(50) @map("user_id")
  username          String     @unique @db.VarChar(50)
  email             String     @unique @db.VarChar(50)
  fullName          String     @map("full_name") @db.VarChar(100)
  password          String     @db.VarChar(255)
  isEmailVerified   Boolean    @default(false) @map("is_email_verified")
  profilePicture    String     @default("") @map("profile_picture")
  createdAt         DateTime   @default(now()) @map("created_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")

  messages          Message[]  @relation("UserMessages")
  emailVerification EmailVerification[]  @relation("UserEmailVerification")

  @@map("users")
}

model ChatRoom {
  chatRoomId String     @id @default(uuid()) @db.VarChar(50) @map("chat_room_id")
  createdAt  DateTime   @default(now()) @map("created_at")

  messages   Message[]  @relation("ChatRoomMessages")

  @@map("chat_room")
}

model Message {
  messageId   String    @id @default(uuid()) @db.VarChar(50) @map("message_id")
  text        String?
  image       String?
  createdAt   DateTime  @default(now()) @map("created_at")

  userId      String    @map("user_id") @db.VarChar(50)
  chatRoomId  String    @map("chat_room_id") @db.VarChar(50)

  user        User      @relation("UserMessages", fields: [userId], references: [userId])
  chatRoom    ChatRoom  @relation("ChatRoomMessages", fields: [chatRoomId], references: [chatRoomId])

  @@map("messages")
}

model EmailVerification {
  emailVerificationId String    @id @default(uuid()) @db.VarChar(50) @map("email_verification_id")
  token               String    @unique @db.VarChar(50)
  expirationDate      DateTime
  createdAt           DateTime  @default(now()) @map("created_at")

  userId              String    @map("user_id") @db.VarChar(50)

  user                User      @relation("UserEmailVerification", fields: [userId], references: [userId])

  @@map("email_verification")
}
